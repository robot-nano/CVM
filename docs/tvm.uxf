<?xml version="1.0" encoding="UTF-8"?><diagram program="umlet" version="13.3">
  <help_text>Space for diagram notes</help_text>
  <zoom_level>6</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>432</x>
      <y>48</y>
      <w>246</w>
      <h>378</h>
    </coordinates>
    <panel_attributes>Object
--
+ FDeleter : void(*)(Object*)  函数指针
_+ _type_key : constexpr const char*_
_+ _type_final : constexpr bool_
_+ _type_child_slots : constexpr uint32_
_+ _type_child_slots_can_overflow : constexpr bool_
_+ _type_has_method_visit_attrs : constexpr bool_
_+ _type_has_method_sequel_reduce : constexpr bool_
_+ _type_has_method_shash_reduce : constexpr bool_
_+ _type_index : constexpr uint32_t_
# type_index : uint32_t
# ref_counter_ : RefCounterType
# deleter : FDeleter
--
+ type_index() const : uint32_t
+ GetTypeKey() const : string
+ GetTypeKeyHash() const : size_t
+ IsInstance() const : bool
_+ TypeIndex2Key(tindex:uint32_t) : string_
_+ TypeIndex2KeyHash(tindex:uint32_t) : size_t_
_+ TypeKey2Index(key : const string) : string_
_+ _GetOrAllocRuntimeTypeIndex() : uint32_t_
_+ RuntimeTypeIndex() : uint32_t_
+ Object() &lt;&lt;constructor&gt;&gt;
+ Object(other:const Object&amp;) &lt;&lt;constructor&gt;&gt;
+ Object(other: Object&amp;&amp;) &lt;&lt;constructor&gt;&gt;
+ operator=(other:const Object&amp;) : Object&amp;
+ operator=(other:Object&amp;&amp;) : Object&amp;
_# GetOrAllocRuntimeTypeIndex(key:const string,static_tindex:uint32_t,parent_tindex:uint32_t,type_child_slots:uint32_t,type_child_slots_can_overflow:bool) : uint32_t_
# IncRef() : inline void
# DecRef() : inline void
- use_count() const : inline int
- DerivedFrom(parent_tindex:uint32_t) const : bool

friend class ObjAllocatorBase
friend class TVMRetValue
friend class ObjectInternal</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>366</x>
      <y>516</y>
      <w>288</w>
      <h>426</h>
    </coordinates>
    <panel_attributes>template=text
ObjectPtr
--
- data_ : Object*
--
+ ObjectPtr() &lt;&lt;constructor&gt;&gt;
+ ObjectPtr(nullptr_t) &lt;&lt;constructor&gt;&gt;
+ ObjectPtr(other:const ObjectPtr&lt;T&gt;) &lt;&lt;constructor&gt;&gt;
+ ObjectPtr(other:const ObjectPtr&lt;U&gt;) &lt;&lt;constructor&gt;&gt;
+ ObjectPtr(other:ObjectPtr&lt;T&gt;&amp;&amp;) &lt;&lt;move constructor&gt;&gt;
+ ObjectPtr(other:ObjectPtr&lt;Y&gt;&amp;&amp;) &lt;&lt;move constructor&gt;&gt;
+ ~ObjectPtr()
+ swap(other:ObjectPtr&lt;T&gt;&amp;) : void
+ get() const : T*
+ operator-&gt;() const : T*
+ operator*() const : T*
+ operator=(other:const ObjectPtr&lt;T&gt;&amp;) : ObjectPtr&lt;T&gt;&amp;
+ operator=(other:ObjectPtr&lt;T&gt;&amp;&amp;) : ObjectPtr&lt;T&gt;&amp;
+ reset() : void
+ use_count() const : int
+ unique() const : bool
+ operator==(other:const ObjectPtr&lt;T&gt;&amp;) const : bool
+ operator!=(other:const ObjectPtr&lt;T&gt;&amp;) const : bool
+ operator==(null:nullptr_t) const : bool
+ operator!=(null:nullptr_t) const : bool
- explicit ObjectPtr(data:Object*) &lt;&lt;constructor&gt;&gt;
_- MoveFromRValueRefArg(ref:Object**) : ObjectPtr&lt;T&gt;_

frient class Object
frient class ObjectRef
frient class ObjectPtrHash
template&lt;typename&gt;
frient class  ObjectPtr
template&lt;typename&gt;
frient class  ObjAllocatorBase
frient class TVMPODValue_
frient class TVMArgsSetter
frient class TVMRetValue
frient class TVMArgValue
frient class TVMMoveableArgValue_
template &lt;typename RelayRefType, typename ObjType&gt;
frient RelayRefType GetRef(ptr:const ObjType*)
template &lt;typename BaseType, typename ObjType&gt;
friend GetObjectPtr(ptr:ObjType*) : ObjectPtr&lt;BaseType&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>834</x>
      <y>516</y>
      <w>270</w>
      <h>306</h>
    </coordinates>
    <panel_attributes>ObjectRef
--
_+ _type_is_nullable : constexpr bool_
# data_ : ObjectPtr&lt;Object&gt;

friend struct ObjectPtrHash
--
+ ObjectRef()
+ explict ObjectRef(data:ObjectPtr&lt;Object&gt;)
+ same_as(other:const ObjectRef&amp;) const : bool
+ operator==(other:const ObjectRef&amp;) const : bool
+ operator!=(other:const ObjectRef&amp;) const : bool
+ operator&lt;(other:const ObjectRef&amp;) const : bool
+ defined() const : bool
+ get() const : const Object*
+ operator-&gt;() const : const Object*
+ unique() const : bool
+ use_count() const : int
template &lt;typename ObjectType&gt;
+ as() const : inline const ObjectType*
# get_mutable() const : Object*
template &lt;typename T&gt;
_# DowncastCheck(ref:ObjectRef) : T_
_#FFIClearAfterMove(ref:pObjectRef*) : void_
template&lt;ObjectType&gt;
_# GetDataPtr(ref:const ObjectRef&amp;) : ObjectPtr&lt;ObjectType&gt;_

friend class TVMRetValue
friend class TVMArgsSetter
friend class ObjectInternal
template&lt;typename SubRef, typename BaseRef&gt;
friend SubRef Downcast(ref:BaseRef)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>552</x>
      <y>420</y>
      <w>18</w>
      <h>114</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;170.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>642</x>
      <y>534</y>
      <w>204</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;320.0;10.0</additional_attributes>
  </element>
</diagram>
